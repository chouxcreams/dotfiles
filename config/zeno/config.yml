snippets:
  # snippet and keyword abbrev
  - name: git
    keyword: g
    snippet: git

  - name: claude
    keyword: c
    snippet: claude

  - name: git create new branch
    keyword: sc
    snippet: switch -c {{branch_name}}
    context:
      lbuffer: "^git"

  - name: git branch
    keyword: br
    snippet: branch
    context:
      lbuffer: "^git"

  - name: git status
    keyword: gs
    snippet: git status --short --branch

  # snippet with placeholder
  - name: git commit message
    keyword: gcim
    snippet: git commit -m '{{commit_message}}'

  - name: git add all & commit
    keyword: gac
    snippet: |
      git add . && git commit -m '{{commit_message}}'

  - name: git add all, commit & push
    keyword: gacp
    snippet: |
      git add . && git commit -m '{{commit_message}}' && git push

  - name: gp to git push
    keyword: gp
    snippet: git push

  - name: git push
    keyword: p
    snippet: push
    context:
      lbuffer: "^git"

  - name: create git worktree
    keyword: wtc
    snippet: wt-create {{branch_name}}
    context:
      lbuffer: "^git"

  - name: git worktree
    keyword: wt
    snippet: worktree
    context:
      lbuffer: "^git"

  - name: git worktree add
    keyword: a
    snippet: add
    context:
      lbuffer: "^git worktree"

  - name: git worktree list
    keyword: ls
    snippet: list
    context:
      lbuffer: "^git worktree"

  - name: git worktree remove
    keyword: rm
    snippet: remove
    context:
      lbuffer: "^git worktree"

  - name: git switch branch
    keyword: gsw
    snippet: git switch {{branch_name}}

  - name: git switch main
    keyword: gsm
    snippet: git switch main

  - name: git switch
    keyword: sw
    snippet: switch {{branch_name}}
    context:
      lbuffer: "^git"

  - name: git switch main
    keyword: sm
    snippet: switch main
    context:
      lbuffer: "^git"

  - name: git pull
    keyword: pl
    snippet: pull
    context:
      lbuffer: "^git"

  - name: git log
    keyword: gl
    snippet: git plog

  - name: git set origin
    keyword: o
    snippet: zsh -c "git symbolic-ref --short HEAD | sed 's/^/origin /'"
    context:
      lbuffer: "^git (push|pull)"
    evaluate: true

  - name: github copilot suggest
    keyword: ghcs
    snippet: gh copilot suggest

  - name: github copilot explain
    keyword: ghce
    snippet: gh copilot explain

  - name: "null"
    keyword: "null"
    snippet: ">/dev/null 2>&1"
    # auto expand condition
    # If not defined, it is only valid at the beginning of a line.
    context:
      # buffer: ''
      lbuffer: '.+\s'
      # rbuffer: ''

  - name: help option
    keyword: -H
    snippet: --help
    context:
      lbuffer: '^.*\s'

  - name: branch
    keyword: B
    snippet: git symbolic-ref --short HEAD
    context:
      lbuffer: '^git\s+checkout\s+'
    evaluate: true # eval snippet

  - name: brew install
    keyword: i
    snippet: install {{package_name}}
    context:
      lbuffer: "^brew"

  - name: docker
    keyword: dc
    snippet: docker

  - name: docker compose
    keyword: dcp
    snippet: docker compose

  - name: docker compose up
    keyword: dup
    snippet: docker compose up -d

  - name: deno
    keyword: dn
    snippet: deno

  - name: deno run
    keyword: r
    snippet: run
    context:
      lbuffer: '^deno\s'

  - name: deno task
    keyword: t
    snippet: task
    context:
      lbuffer: '^deno\s'

  - name: lazygit
    keyword: lg
    snippet: lazygit

  - name: mise
    keyword: m
    snippet: mise

  - name: mise run
    keyword: r
    snippet: run
    context:
      lbuffer: '^mise\s'

  - name: zellij
    keyword: zel
    snippet: zellij

  - name: systemctl
    keyword: sc
    snippet: systemctl
    context:
      lbuffer: '^(sudo\s)?'

completions:
  - name: go task
    patterns:
      - "^task $"
    sourceCommand: "task --list-all 2>/dev/null | sed '1d'"
    options:
      --prompt: "'Task> '"
    callback: "sed -n 's/^\\* \\([^:]*\\):.*/\\1/p'"
  - name: dot command
    patterns:
      - "^dot $"
    sourceCommand: "dot --list-all 2>/dev/null | sed '1d'"
    options:
      --prompt: "'dot> '"
    callback: "sed -n 's/^\\* \\([^:]*\\):.*/\\1/p'"

  - name: glow
    patterns:
      - "^glow $"
    sourceCommand: "fd \".*\\.md\" -d 2"
    options:
      --prompt: "'glow> '"

  - name: glow stash
    patterns:
      - "^glow stash $"
    sourceCommand: "fd \".*\\.md\" -d 2"
    options:
      --prompt: "'glow stash> '"

  - name: zellij session
    patterns:
      - "^zellij (a|d|k|attach|delete|kill) $"
    sourceCommand: "zellij list-sessions --short"
    options:
      --prompt: "'zellij sessions> '"

  - name: zellij layout
    patterns:
      - "^zellij(.*)(--layout|-l) $"
    sourceCommand: "get-zellij-layout-list.sh"
    options:
      --prompt: "'zellij layouts> '"
